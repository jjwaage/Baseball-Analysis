---
title: "Comparing My Playoff Projection to Playoff Percentages Each Week"
author: "Jonna Waage"
date: "2023-09-25"
---

## How does my Projection of Playoff Contending Teams Compare to their Percentages of Making the Playoffs Every Week?

```{r setup, include=FALSE}
##install.packages("gganimate")
library(gifski)
library(gganimate)
#library(animation)
library(quarto)
library(tidyverse)
library(dplyr)
library(readxl)
knitr::opts_chunk$set(echo = TRUE,
                      message = FALSE,
                      warning = FALSE)
library(ggplot2)
library(MASS)
library(scales)
library(reshape2)
library(data.table)
```

```{r, echo=TRUE}
load("playoffsummarydata.RData")

files <- list.files( pattern = "*.xlsx", full.names = TRUE)

all_data <- files %>%
  map_dfr(~ {
    temp_data <- read_excel(.x, skip = 1)
    temp_data <- temp_data[, c("Date", "Post")] %>%
      mutate(FileName = tools::file_path_sans_ext(basename(.x)))
    return(temp_data)
  })

print(playoffsummary)

convert_to_percentage <- function(value) {
  # Remove greater than and less than signs if present
  cleaned_value <- gsub("[><]", "", as.character(value))
  
  if (grepl("%", cleaned_value)) {
    return(cleaned_value)
  } else if (grepl("E", cleaned_value)) {
    return(sprintf("%.2f%%", as.numeric(cleaned_value) * 100))
  } else {
    return(sprintf("%.2f%%", as.numeric(cleaned_value) * 100))
  }
}

all_data$Post <- sapply(all_data$Post, convert_to_percentage)

names(all_data)[names(all_data) == "FileName"] <- "Team"
print(all_data)

#write.csv(playoffsummary, file = "playoffsummary.csv")
playoffsummary<-read.csv("playoffsummary.csv")

merged_data <- merge(playoffsummary, all_data, by.x = "Team_short", by.y = "Team")

merged_data$Team <- factor(merged_data$Team, levels = unique(merged_data$Team))

# Create the animated dot plot using gganimate
p <- ggplot(merged_data, aes(x = Percent.Playoffs.Made, y = Post, color = Team)) +
  geom_point() +
  labs(title = "MLB Playoff Percentage Comparison") +
  theme_minimal() +
  transition_time(Date) +  # Use transition_time for animation over time
  enter_fade() +
  exit_fade()

# Save the animation as a GIF using gganimate's animate function
animation_file <- "mlb_playoff_animation.gif"
animate(p, nframes = 100, duration = 2, end_pause = 10,
        renderer = gifski_renderer,
        width = 800, height = 600, units = "px", filename = animation_file)

# Display the animation in the R Markdown document
knitr::include_graphics(animation_file)



```
