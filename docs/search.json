[
  {
    "objectID": "posts/Resources/index.html",
    "href": "posts/Resources/index.html",
    "title": "Resources",
    "section": "",
    "text": "Links to resources used\nHow FiveThirtyEight does their predictions\nPlayoff Simulator\nSimulator in R\n2022 Updated Playoffs\nHome Field Advantage\nContributing Factors in Increasing Winning Percentage\n2022 Stats"
  },
  {
    "objectID": "posts/Mariners Playoff Analysis/index.html",
    "href": "posts/Mariners Playoff Analysis/index.html",
    "title": "Estimating Playoffs Based on the Previous Year’s Data",
    "section": "",
    "text": "Can the next MLB season be estimated by the last year’s run differential data?\n\nIntroduction\nSimulates a 2023 season of all 162 games using the Bradley-Terry model.\nUses last year’s run differentials (average runs scored minus average runs allowed) to try to estimate this year’s top performers.\n\n\nData\nschedule1 &lt;- read_excel(\"schedule.xlsx\") - reads in a two column excel sheet with headers ‘Home’ and ‘Away’ and teams from each game listed below\nbattingstats &lt;- read_excel(\"2022battingstats.xlsx\") - reads in a excel sheet with 2022 MLB batting statistics for all teams\nfieldingstats &lt;- read_excel(\"fieldingstats2022.xlsx\") - reads in a excel sheet with 2022 MLB fielding statistics for all teams\n2022 statistics are from here.\n\n\nCalculations\nThe Bradley-Terry model is a probability model to predict outcomes of object i beating object j based on each objects ability or talent. In this instance, it is used to compare teams but it was originally to be used with players.\nTalent is calculated by z-scores of seasonal average run differential of each team and then divided by 10. It is then adjusted for home field advantage so 0.04, based on this article, is added to the probability of the home team winning.\nThe equation used in this project for probability is:\nprob.Home = exp(Talent.Home) / (exp(Talent.Home) + exp(Talent.Visitor)) + 0.04)\nThen, that probability is plugged into another equation to calculate a winner from each game.\noutcome = rbinom(nrow(.), 1, prob.Home), winner = ifelse(outcome, Home, Visitor))\nThis equation uses rbinom which simulates a series of Bernoulli trials and returns the results. This returns a 1 if the home team wins and a 0 if the visiting team wins.\n\n\n\n\n\n\n\n\n\n\n\n\n\nOne simulation\nOne season simulation with Wins and Losses from each team using the Bradley Terry model to predict each game.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNL East\nWins\nLosses\nNL Cent\nWins\nLosses\nNL West\nWins\nLosses\n\n\n\n\nPhiladelphia Phillies\n88\n73\nMilwaukee Brewers\n85\n76\nLos Angeles Dodgers\n90\n71\n\n\nNew York Mets\n84\n77\nChicago Cubs\n83\n78\nSan Francisco Giants\n86\n75\n\n\nMiami Marlins\n81\n80\nSt. Louis Cardinals\n82\n79\nSan Diego Padres\n85\n76\n\n\nAtlanta Braves\n80\n81\nCincinnati Reds\n71\n90\nArizona Diamondbacks\n79\n82\n\n\nWashington Nationals\n75\n86\nPittsburgh Pirates\n65\n96\nColorado Rockies\n75\n86\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAL East\nWins\nLosses\nAL Cent\nWins\nLosses\nAL West\nWins\nLosses\n\n\n\n\nNew York Yankees\n97\n65\nChicago White Sox\n85\n77\nOakland Athletics\n90\n72\n\n\nToronto Blue Jays\n87\n75\nKansas City Royals\n83\n79\nSeattle Mariners\n85\n77\n\n\nTampa Bay Rays\n83\n79\nDetroit Tigers\n82\n80\nHouston Astros\n84\n78\n\n\nBaltimore Orioles\n79\n83\nMinnesota Twins\n81\n81\nLos Angeles Angels\n74\n88\n\n\nBoston Red Sox\n65\n97\nCleveland Guardians\n76\n86\nTexas Rangers\n70\n92\n\n\n\n\n\n\n\n1000 Season Simulations\nHere is the percentage of seasons in 1000 simulations where each team made the playoffs.\n\n\n\n\n\n\n\n\n\n\n\n\n\nNL East\nPlayoff %\nNL Cent\nPlayoff %\nNL West\nPlayoff %\n\n\n\n\nAtlanta Braves\n72.1%\nSt. Louis Cardinals\n70.0%\nLos Angeles Dodgers\n86.9%\n\n\nNew York Mets\n66.1%\nMilwaukee Brewers\n45.3%\nSan Francisco Giants\n46.4%\n\n\nPhiladelphia Phillies\n48.7%\nChicago Cubs\n26.8%\nSan Diego Padres\n44.1%\n\n\nMiami Marlins\n23.5%\nCincinnati Reds\n15.5%\nArizona Diamondbacks\n29.0%\n\n\nWashington Nationals\n5.9%\nPittsburgh Pirates\n9.8%\nColorado Rockies\n9.9%\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAL East\nPlayoff %\nAL Cent\nPlayoff %\nAL West\nPlayoff %\n\n\n\n\nNew York Yankees\n77.7%\nCleveland Guardians\n55.4%\nHouston Astros\n77.5%\n\n\nToronto Blue Jays\n54.0%\nMinnesota Twins\n42.4%\nSeattle Mariners\n42.1%\n\n\nTampa Bay Rays\n46.6%\nChicago White Sox\n33.4%\nTexas Rangers\n32.5%\n\n\nBaltimore Orioles\n33.6%\nDetroit Tigers\n16.9%\nLos Angeles Angels\n31.6%\n\n\nBoston Red Sox\n27.7%\nKansas City Royals\n15.3%\nOakland Athletics\n13.3%\n\n\n\n\n\nHere is the percentage of wins each team had after 1000 seasons\n\n\n\n\n\n\n\n\n\n\n\n\n\nNL East\nWin %\nNL Cent\nWin %\nNL West\nWin %\n\n\n\n\nAtlanta Braves\n53.5%\nSt. Louis Cardinals\n52.9%\nLos Angeles Dodgers\n56.0%\n\n\nNew York Mets\n52.9%\nMilwaukee Brewers\n50.7%\nSan Francisco Giants\n50.9%\n\n\nPhiladelphia Phillies\n51.1%\nChicago Cubs\n48.7%\nSan Diego Padres\n50.6%\n\n\nMiami Marlins\n48.3%\nCincinnati Reds\n47.1%\nArizona Diamondbacks\n49.2%\n\n\nWashington Nationals\n45.1%\nPittsburgh Pirates\n46.3%\nColorado Rockies\n46.6%\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAL East\nWin %\nAL Cent\nWin %\nAL West\nWin %\n\n\n\n\nNew York Yankees\n54.2%\nCleveland Guardians\n51.7%\nHouston Astros\n54.1%\n\n\nToronto Blue Jays\n51.7%\nMinnesota Twins\n50.3%\nSeattle Mariners\n50.3%\n\n\nTampa Bay Rays\n50.8%\nChicago White Sox\n49.5%\nTexas Rangers\n49.3%\n\n\nBaltimore Orioles\n49.5%\nKansas City Royals\n47.3%\nLos Angeles Angels\n49.2%\n\n\nBoston Red Sox\n48.9%\nDetroit Tigers\n47.1%\nOakland Athletics\n46.4%\n\n\n\n\n\n\n\nComparing to the 2023 Season\nHere are the current standings and win percentages of each team in the MLB as of June 12th at 4 pm PST\n\n\n\n\n\n\n\n\n\n\n\n\n\nNL East\nWin %\nNL Cent\nWin %\nNL West\nWin %\n\n\n\n\nAtlanta Braves\n60.6%\nPittsburgh Pirates\n53.1%\nArizona Diamondbacks\n62.1%\n\n\nMiami Marlins\n55.2%\nMilwaukee Brewers\n51.5%\nLos Angeles Dodgers\n56.1%\n\n\nPhiladelphia Phillies\n48.5%\nCincinnati Reds\n47.8%\nSan Francisco Giants\n51.5%\n\n\nNew York Mets\n47%\nChicago Cubs\n43.1%\nSan Diego Padres\n47.7%\n\n\nWashington Nationals\n40.6%\nSt. Louis Cardinals\n40.3%\nColorado Rockies\n41.2%\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAL East\nWin %\nAL Cent\nWin %\nAL West\nWin %\n\n\n\n\nTampa Bay Rays\n69.6%\nMinnesota Twins\n50%\nTexas Rangers\n63.1%\n\n\nBaltimore Orioles\n63.1%\nCleveland Guardians\n47.7%\nHouston Astros\n56.1%\n\n\nNew York Yankees\n56.7%\nChicago White Sox\n43.3%\nLos Angeles Angels\n54.4%\n\n\nToronto Blue Jays\n55.2%\nDetroit Tigers\n42.2%\nSeattle Mariners\n49.2%\n\n\nBoston Red Sox\n49.3%\nKansas City Royals\n27.3%\nOakland Athletics\n26.5%\n\n\n\n\n\n\nAs shown above, there are some similarities between the standings of last year and this year."
  },
  {
    "objectID": "posts/Barrie/index.html",
    "href": "posts/Barrie/index.html",
    "title": "2020 Season Simulation",
    "section": "",
    "text": "Introduction\nSimulates a 2020 season of 60 games using the Bradley-Terry model.\nBy repeated simulations, can explore the relationship between talent and season performance.\n\n\nMain functions\nRead in two functions:\n\none.simulation.20() performs the simulation\nprint_standings() prints the division standings of the simulation\n\nRead in several packages that I’ll need.\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(MASS)\n\nAlso I am adding several helper functions increasefont() and centertitle() that I will use in ggplot2.\n\nincreasefont &lt;- function(Size = 18){\n  theme(text = element_text(size = Size))\n}\ncentertitle &lt;- function(Color = \"blue\"){\n    theme(plot.title = \n            element_text(colour = Color, size = 18, \n        hjust = 0.5, vjust = 0.8, angle = 0))\n}\n\n\n\nOne simulation\nOne simulation assuming a standard deviation of 0.3.\n\nset.seed(123)\nout &lt;- one.simulation.20(0.3)\nprint_standings(out)\n\n                             \n  AL East  W  L NL East  W  L\n  ------------- -------------\n      BAL 39 21     NYN 37 23\n      TBA 37 23     WAS 30 30\n      BOS 36 24     PHI 28 32\n      TOR 25 35     MIA 25 35\n      NYA 21 39     ATL 22 38\n                             \n  AL Cent  W  L NL Cent  W  L\n  ------------- -------------\n      MIN 33 27     CHN 37 23\n      KCR 32 28     PIT 33 27\n      CHA 32 28     SLN 29 31\n      CLE 30 30     CIN 28 32\n      DET 29 31     MIL 17 43\n                             \n  AL West  W  L NL West  W  L\n  ------------- -------------\n      SEA 40 20     COL 34 26\n      HOU 32 28     SDN 33 27\n      TEX 26 34     LAN 32 28\n      LAA 25 35     ARI 29 31\n      OAK 24 36     SFN 25 35\n\n\n\n\n1000 Simulations\nStore the results of 1000 simulated seasons:\n\nall_out &lt;- NULL\nfor(j in 1:1000){\n  out &lt;- one.simulation.20(0.3)\n  out$Simulation &lt;- j\n  all_out &lt;- rbind(all_out, out)\n}\n\n\n\nTalent and probability of making playoffs\nDefine a new variable Level that is 0 (missed playoffs), 1 (wild-card), or 2 (win division).\n\nall_out %&gt;% \n  mutate(Level = as.factor(2 * (Winner.Div == 1) +\n                 (Wild.Card == 1))) -&gt; all_out\n\nLevel is an ordinal response variable. Using a proportional odds model, model the ordinal response as a function of the team’s talent.\nFor a range of talent values from -0.9 to 0.9, find the fitted model probability of the three outcomes.\n\npfit &lt;- polr(Level ~ Talent,\n             data = all_out)\nDF &lt;- data.frame(Talent = seq(-0.9, 0.9,\n                                  length.out = 200))\nProb &lt;- predict(pfit, DF, type = \"probs\")\nDF1 &lt;- DF2 &lt;- DF3 &lt;- DF\nDF1$Probability &lt;- Prob[, 3]; DF1$Type &lt;- \"Division\"\nDF2$Probability &lt;- Prob[, 2]; DF2$Type &lt;- \"Wild Card\"\nDF3$Probability &lt;- Prob[, 3] + Prob[, 2]\nDF3$Type &lt;- \"Playoff\"\nDFall &lt;- rbind(DF1, DF2, DF3)\n\nGraph of this division, wild card, and playoff probabilities.\n\nggplot(DFall, aes(Talent, Probability,\n                  color = Type)) +\n  geom_line() +\n  increasefont() +\n  ggtitle(\"Probability of Reaching Different Levels\") +\n  centertitle()\n\n\n\n\n\n\nTalents of wild card teams and division-winners\nConstruct density estimates of\n\nall teams\nteams that win division\nteams that get wild card\n\n\ndata1 &lt;- filter(all_out, Wild.Card == 1) %&gt;% \n         mutate(Type = \"Wild Card\")\ndata2 &lt;- filter(all_out, Winner.Div == 1) %&gt;% \n  mutate(Type = \"Win Division\")\ndata3 &lt;- all_out %&gt;% \n  mutate(Type = \"All Teams\")\n\nggplot(rbind(data1, data2, data3), \n       aes(Talent, color = Type)) +\n  geom_density(size = 1.5) +\n  increasefont() + centertitle() +\n  ggtitle(\"Talent Distributions for Three Types of Teams\")\n\n\n\n\n\n\nHow many games to win?\nFind the conditional probability of winning division title, of getting wild card, and making the playoffs given you won X games.\n\nall_out %&gt;% \n  filter(Wins &gt;= 25, Wins &lt;= 45) %&gt;% \n  group_by(Wins) %&gt;% \n  summarize(N = n(), \n            Prob_Div = mean(Winner.Div),\n            Prob_WC = mean(Wild.Card),\n            .groups = \"drop\") -&gt; S\n\nPlot smooths of these empirical probabilities.\n\nS %&gt;% \n  ggplot() +\n  geom_smooth(aes(Wins, Prob_Div), se = FALSE,\n              color = \"red\",\n              method = \"loess\") +\n  geom_smooth(aes(Wins, Prob_WC), se = FALSE,\n              color = \"blue\",\n              method = \"loess\") + \n  geom_smooth(aes(Wins, Prob_Div + Prob_WC),\n                  se = FALSE,\n              color = \"black\",\n              method = \"loess\") +\n  increasefont() +\n  ylab(\"Probability\") +\n  annotate(geom = \"text\", x = 32, y = 0.75,\n           label = \"Playoffs\", size = 7) +\n  annotate(geom = \"text\", x = 40.3, y = 0.75,\n           label = \"Division\", size = 7,\n           color = \"red\") +\n  annotate(geom = \"text\", x = 40.8, y = 0.25,\n           label = \"Wild Card\", size = 7,\n           color = \"blue\") +\n  ggtitle(\"How Many Games Does Team Need to Win?\") +\n  centertitle()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sports Data Analysis and Visualization",
    "section": "",
    "text": "This project uses real MLB data to project how the 2023 season could finish. The first step was just using a 50/50 chance for each team to win for the rest of the season and then adding more determining factors as time went on. This program can also be altered to be used with many different types of data to create projections.\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\nEstimating Playoffs Based on the Previous Year’s Data\n\n\n\n\n\n\n\n\n\n\n\n\nMay 31, 2023\n\n\nJonna Waage\n\n\n\n\n\n\n  \n\n\n\n\nResources\n\n\n\n\n\n\n\n\n\n\n\n\nMay 30, 2023\n\n\nJonna Waage\n\n\n\n\n\n\n  \n\n\n\n\n2020 Season Simulation\n\n\n\n\n\n\n\n\n\n\n\n\nJun 27, 2020\n\n\nJim Albert\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]